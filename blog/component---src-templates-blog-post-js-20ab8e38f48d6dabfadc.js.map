{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["pageQuery","BlogPost","data","location","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","feedbackUrl","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","mode","flexWrap","justifyContent","listStyle","padding","to","slug","rel"],"mappings":"2FACA,sIAQA,MA0EaA,EAAS,aAgCPC,UA1GE,EAAGC,OAAMC,WAAUC,kBAClC,MAAMC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,OACnC,SAAEC,EAAF,KAAYC,GAASR,EAE3B,OACE,kBAAC,IAAD,CACES,YAAaX,EAAKM,KAAKC,aAAaI,YACpCV,SAAUA,EACVO,MAAOH,GAEP,kBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGff,EAAKS,YAAYJ,OAEpB,uBACEO,MAAO,IACFI,aAAM,IACTC,QAAQ,QACRF,aAAcD,YAAO,KAGtBd,EAAKS,YAAYS,KACjB,OACAlB,EAAKmB,OAAOC,YAAYC,OAG7B,6BAASC,wBAAyB,CAAEC,OAAQvB,EAAKwB,QACjD,wBAAIZ,MAAO,CAAEG,aAAcD,YAAO,MAClC,gCACE,kBAAC,IAAD,CAAKW,KAAK,YAId,6BACE,wBACEb,MAAO,CACLK,QAAQ,OACRS,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGvB,GACC,kBAAC,OAAD,CAAMwB,GAAIxB,EAASa,OAAOY,KAAMC,IAAI,QAApC,KACK1B,EAASG,YAAYJ,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAAKY,OAAOY,KAAMC,IAAI,QAC7BzB,EAAKE,YAAYJ,MADpB","file":"component---src-templates-blog-post-js-20ab8e38f48d6dabfadc.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm, scale } from '../utils/typography';\n\nconst BlogPost = ({ data, location, pageContext }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout\n      feedbackUrl={data.site.siteMetadata.feedbackUrl}\n      location={location}\n      title={siteTitle}\n    >\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1)\n            }}\n          >\n            {post.frontmatter.date}\n            {' · ⏳'}\n            {post.fields.readingTime.text}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr style={{ marginBottom: rhythm(1) }} />\n        <footer>\n          <Bio mode=\"short\" />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        feedbackUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n\nBlogPost.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n  pageContext: PropTypes.object\n};\n\nexport default BlogPost;\n"],"sourceRoot":""}