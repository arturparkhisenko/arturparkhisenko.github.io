{"version":3,"file":"component---src-pages-index-js-bdcd4384367634069408.js","mappings":"2IAcA,MAAMA,EAAM,EAAGC,KAAAA,MACb,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,eAqBtB,OAAEC,GAAWF,EAAKG,KAAKC,aAC7B,OACE,uBACEC,MAAO,CACLC,QAAU,OACVC,cAAcC,EAAAA,EAAAA,IAAO,KAGvB,2BACA,gBAAC,EAAAC,EAAD,CACEC,MAAOV,EAAKW,OAAOC,gBAAgBC,gBACnCC,IAAKZ,EAAOa,KACZV,MAAO,CACLW,aAAaR,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdU,SAAU,GACVC,aAAe,QAEjBC,SAAU,CACRD,aAAe,SAGnB,yBACY,SAATnB,EAAkB,+BAAiC,cACpD,qBAAGqB,KAAMlB,EAAOmB,SACd,8BAASnB,EAAOa,OAElB,2BACA,6BAAQb,EAAOoB,YAMvBxB,EAAIyB,aAAe,CACjBxB,KAAM,QAOR,O,4FCWA,UAhFkB,EAAGC,KAAAA,EAAMwB,SAAAA,MACzB,MAAMC,EAAYzB,EAAKG,KAAKC,aAAasB,MACnCC,EAAQ3B,EAAK4B,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CACEC,YAAa9B,EAAKG,KAAKC,aAAa0B,YACpCN,SAAUA,EACVE,MAAOD,GAEP,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACCC,EAAMI,KAAI,EAAGC,KAAAA,MACZ,MAAMN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,2BAASC,IAAKJ,EAAKE,OAAOC,MACxB,8BACE,sBACE9B,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAA6B,KAAD,CAAMhC,MAAO,CAAEiC,UAAY,QAASC,GAAIP,EAAKE,OAAOC,MACjDT,IAGL,6BACGM,EAAKC,YAAYO,KACjB,OACAR,EAAKE,OAAOO,YAAYC,OAG7B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc","sources":["webpack://rgb/./src/components/bio.js","webpack://rgb/./src/pages/index.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\n\r\nimport { rhythm } from '../utils/typography';\r\n\r\nconst Bio = ({ mode }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(\r\n        absolutePath: { regex: \"/profile-pic-artur-parkhisenko.png/\" }\r\n      ) {\r\n        childImageSharp {\r\n          gatsbyImageData(width: 50, height: 50, layout: FIXED)\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const { author } = data.site.siteMetadata;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(1)\r\n      }}\r\n    >\r\n      <br />\r\n      <GatsbyImage\r\n        image={data.avatar.childImageSharp.gatsbyImageData}\r\n        alt={author.name}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`\r\n        }}\r\n      />\r\n      <p>\r\n        {mode === 'full' ? 'A personal blog, written by ' : 'Written by '}\r\n        <a href={author.siteUrl}>\r\n          <strong>{author.name}</strong>\r\n        </a>\r\n        <br />\r\n        <small>{author.summary}</small>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nBio.defaultProps = {\r\n  mode: 'full' // The possible values are: 'full', 'short'\r\n};\r\n\r\nBio.propTypes = {\r\n  mode: PropTypes.string\r\n};\r\n\r\nexport default Bio;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Bio from '../components/bio';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport { rhythm } from '../utils/typography';\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title;\r\n  const posts = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Layout\r\n      feedbackUrl={data.site.siteMetadata.feedbackUrl}\r\n      location={location}\r\n      title={siteTitle}\r\n    >\r\n      <Seo title=\"All posts\" />\r\n      <Bio />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug;\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h2\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4)\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h2>\r\n              <small>\r\n                {node.frontmatter.date}\r\n                {' · ⏳'}\r\n                {node.fields.readingTime.text}\r\n              </small>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        );\r\n      })}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nBlogIndex.propTypes = {\r\n  data: PropTypes.object,\r\n  location: PropTypes.object\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        feedbackUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogIndex;\r\n"],"names":["Bio","mode","data","useStaticQuery","author","site","siteMetadata","style","display","marginBottom","rhythm","G","image","avatar","childImageSharp","gatsbyImageData","alt","name","marginRight","minWidth","borderRadius","imgStyle","href","siteUrl","summary","defaultProps","location","siteTitle","title","posts","allMarkdownRemark","edges","feedbackUrl","map","node","frontmatter","fields","slug","key","Link","boxShadow","to","date","readingTime","text","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}