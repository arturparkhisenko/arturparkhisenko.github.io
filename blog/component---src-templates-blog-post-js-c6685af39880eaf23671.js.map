{"version":3,"file":"component---src-templates-blog-post-js-c6685af39880eaf23671.js","mappings":"2IAcA,MAAMA,EAAM,EAAGC,KAAAA,MACb,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,eAqBtB,OAAEC,GAAWF,EAAKG,KAAKC,aAC7B,OACE,uBACEC,MAAO,CACLC,QAAU,OACVC,cAAcC,EAAAA,EAAAA,IAAO,KAGvB,2BACA,gBAAC,EAAAC,EAAD,CACEC,MAAOV,EAAKW,OAAOC,gBAAgBC,gBACnCC,IAAKZ,EAAOa,KACZV,MAAO,CACLW,aAAaR,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdU,SAAU,GACVC,aAAe,QAEjBC,SAAU,CACRD,aAAe,SAGnB,yBACY,SAATnB,EAAkB,+BAAiC,cACpD,qBAAGqB,KAAMlB,EAAOmB,SACd,8BAASnB,EAAOa,OAElB,2BACA,6BAAQb,EAAOoB,YAMvBxB,EAAIyB,aAAe,CACjBxB,KAAM,QAOR,O,4FCqCA,UA1GiB,EAAGC,KAAAA,EAAMwB,SAAAA,EAAUC,YAAAA,MAClC,MAAMC,EAAO1B,EAAK2B,eACZC,EAAY5B,EAAKG,KAAKC,aAAayB,OACnC,SAAEC,EAAF,KAAYC,GAASN,EAE3B,OACE,gBAAC,IAAD,CACEO,YAAahC,EAAKG,KAAKC,aAAa4B,YACpCR,SAAUA,EACVK,MAAOD,GAEP,gBAAC,IAAD,CACEC,MAAOH,EAAKO,YAAYJ,MACxBK,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAEpD,+BACE,8BACE,sBACE9B,MAAO,CACL+B,WAAW5B,EAAAA,EAAAA,IAAO,GAClBD,aAAc,IAGfmB,EAAKO,YAAYJ,OAEpB,qBACExB,MAAO,KACFgC,EAAAA,EAAAA,KAAM,IACT/B,QAAU,QACVC,cAAcC,EAAAA,EAAAA,IAAO,KAGtBkB,EAAKO,YAAYK,KACjB,OACAZ,EAAKa,OAAOC,YAAYC,OAG7B,2BAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,QACjD,sBAAIvC,MAAO,CAAEE,cAAcC,EAAAA,EAAAA,IAAO,MAClC,8BACE,gBAAC,IAAD,CAAKT,KAAK,YAId,2BACE,sBACEM,MAAO,CACLC,QAAU,OACVuC,SAAW,OACXC,eAAiB,gBACjBC,UAAY,OACZC,QAAS,IAGX,0BACGlB,GACC,gBAAC,EAAAmB,KAAD,CAAMC,GAAIpB,EAASS,OAAOY,KAAMC,IAAI,QAApC,KACKtB,EAASG,YAAYJ,QAI9B,0BACGE,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAKQ,OAAOY,KAAMC,IAAI,QAC7BrB,EAAKE,YAAYJ,MADpB","sources":["webpack://rgb/./src/components/bio.js","webpack://rgb/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\n\r\nimport { rhythm } from '../utils/typography';\r\n\r\nconst Bio = ({ mode }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(\r\n        absolutePath: { regex: \"/profile-pic-artur-parkhisenko.png/\" }\r\n      ) {\r\n        childImageSharp {\r\n          gatsbyImageData(width: 50, height: 50, layout: FIXED)\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const { author } = data.site.siteMetadata;\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(1)\r\n      }}\r\n    >\r\n      <br />\r\n      <GatsbyImage\r\n        image={data.avatar.childImageSharp.gatsbyImageData}\r\n        alt={author.name}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`\r\n        }}\r\n      />\r\n      <p>\r\n        {mode === 'full' ? 'A personal blog, written by ' : 'Written by '}\r\n        <a href={author.siteUrl}>\r\n          <strong>{author.name}</strong>\r\n        </a>\r\n        <br />\r\n        <small>{author.summary}</small>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nBio.defaultProps = {\r\n  mode: 'full' // The possible values are: 'full', 'short'\r\n};\r\n\r\nBio.propTypes = {\r\n  mode: PropTypes.string\r\n};\r\n\r\nexport default Bio;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Bio from '../components/bio';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport { rhythm, scale } from '../utils/typography';\r\n\r\nconst BlogPost = ({ data, location, pageContext }) => {\r\n  const post = data.markdownRemark;\r\n  const siteTitle = data.site.siteMetadata.title;\r\n  const { previous, next } = pageContext;\r\n\r\n  return (\r\n    <Layout\r\n      feedbackUrl={data.site.siteMetadata.feedbackUrl}\r\n      location={location}\r\n      title={siteTitle}\r\n    >\r\n      <Seo\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article>\r\n        <header>\r\n          <h1\r\n            style={{\r\n              marginTop: rhythm(1),\r\n              marginBottom: 0\r\n            }}\r\n          >\r\n            {post.frontmatter.title}\r\n          </h1>\r\n          <p\r\n            style={{\r\n              ...scale(-1 / 5),\r\n              display: `block`,\r\n              marginBottom: rhythm(1)\r\n            }}\r\n          >\r\n            {post.frontmatter.date}\r\n            {' · ⏳'}\r\n            {post.fields.readingTime.text}\r\n          </p>\r\n        </header>\r\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr style={{ marginBottom: rhythm(1) }} />\r\n        <footer>\r\n          <Bio mode=\"short\" />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        feedbackUrl\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n      fields {\r\n        readingTime {\r\n          text\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nBlogPost.propTypes = {\r\n  data: PropTypes.object,\r\n  location: PropTypes.object,\r\n  pageContext: PropTypes.object\r\n};\r\n\r\nexport default BlogPost;\r\n"],"names":["Bio","mode","data","useStaticQuery","author","site","siteMetadata","style","display","marginBottom","rhythm","G","image","avatar","childImageSharp","gatsbyImageData","alt","name","marginRight","minWidth","borderRadius","imgStyle","href","siteUrl","summary","defaultProps","location","pageContext","post","markdownRemark","siteTitle","title","previous","next","feedbackUrl","frontmatter","description","excerpt","marginTop","scale","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","Link","to","slug","rel"],"sourceRoot":""}